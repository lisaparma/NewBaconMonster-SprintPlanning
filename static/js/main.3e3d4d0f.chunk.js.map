{"version":3,"sources":["store/initialStore.js","store/reducers/matesReducer.js","store/reducers/infoReducer.js","store/reducers/groupsReducer.js","components/TeamMate.js","store/actions.js","utilities.js","components/ScreenshotModal.js","components/HoursPlanning.js","egg.png","components/HeadingTitle.js","components/HomePage.js","App.js","store/createStore.js","index.js"],"names":["initialStore","info","teamName","date","Date","now","mates","groups","name","emergency","matesReducer","state","action","type","newMate1","id","days","newMate2","hours","newMate3","efficiency","newMates1","d","h","infoReducer","groupsReducer","newGroup","groupId","push","newState","forEach","group","key","remove","k","length","connect","ownProps","mate","dispatch","setDays","setDaysAction","setHours","setHoursAction","setEfficiency","setEfficiencyAction","deleteMate","deleteMateAction","edit","className","iconName","onClick","parseInt","defaultValue","min","max","onChange","ev","value","target","parseFloat","calcTotal","allMates","total","user","mateAvailability","generateScreenshot","selector","isDownloadable","widthScreenshot","document","getElementById","clientWidth","heightScreenshot","clientHeight","height","window","scrollY","scrollTo","promiseCanvas","html2canvas","querySelector","width","then","canvas","screenshot","toDataURL","link","createElement","download","getFullYear","getMonth","getDate","href","click","ScreenshotModal","isModalOpen","closeModal","overlayClassName","isOpen","onClose","onRequestClose","src","alt","setEmergency","setEmergencyAction","addMate","addMateAction","useState","table","setTable","editMode","setEditMode","image","setImage","setIsModalOpen","inputRef","useRef","undefined","useEffect","teammateTable","map","find","m","onPlusClick","current","toLocaleLowerCase","toLowerCase","replace","style","display","ref","onKeyDown","HeadingTitle","props","egg","Modal","setAppElement","HomePage","fileRef","React","createRef","fileReader","FileReader","fileJSON","_importClick","_onChangeFile","event","stopPropagation","preventDefault","file","files","readAsText","_showScreenshot","setState","this","onload","json","JSON","parse","result","e","console","error","onerror","nextProps","nextState","nextContext","hasOwnProperty","people","groupMates","group1","decodeJSON","setTeam","groupsRendered","accept","Component","setTeamAction","App","store","reducers","combineReducers","createStore","createPlanningStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.3e3d4d0f.chunk.js","sourcesContent":["const initialStore = {\n  info: {\n    teamName: \"Scrambled Eggs\",\n    date: Date.now()\n  },\n  mates: {\n    \"cataldo\": {\n      \"name\": \"Cataldo\",\n      \"d\": 10,\n      \"h\": 0,\n      \"efficiency\": 50\n    },\n    \"lisa\": {\n      \"name\": \"Lisa\",\n      \"d\": 6,\n      \"h\": 0,\n      \"efficiency\": 80\n    },\n    \"dennis\": {\n      \"name\": \"Dennis\",\n      \"d\": 10,\n      \"h\": 0,\n      \"efficiency\": 80\n    },\n    \"beatrice\": {\n      \"name\": \"Beatrice\",\n      \"d\": 10,\n      \"h\": 0,\n      \"efficiency\": 80\n    },\n    \"davideP\": {\n      \"name\": \"Davide P.\",\n      \"d\": 10,\n      \"h\": 0,\n      \"efficiency\": 30\n    },\n    \"alberto\": {\n      \"name\": \"Alberto\",\n      \"d\": 10,\n      \"h\": 0,\n      \"efficiency\": 80\n    },\n    \"federico\": {\n      \"name\": \"Federico\",\n      \"d\": 10,\n      \"h\": 0,\n      \"efficiency\": 80\n    },\n    \"niccolo\": {\n      \"name\": \"Niccolò\",\n      \"d\": 6,\n      \"h\": 0,\n      \"efficiency\": 80\n    },\n    \"noman\": {\n      \"name\": \"Noman\",\n      \"d\": 10,\n      \"h\": 0,\n      \"efficiency\": 80\n    },\n    \"perla\": {\n      \"name\": \"Perla\",\n      \"d\": 5,\n      \"h\": 0,\n      \"efficiency\": 80\n    }\n  },\n  groups: {\n    \"frontend\": {\n      name: \"Front-end\",\n      mates: [\"cataldo\", \"lisa\", \"dennis\", \"beatrice\"],\n      emergency: 20\n    },\n    \"backend\": {\n        name: \"Back-end\",\n        mates: [\"davideP\", \"alberto\", \"federico\", \"niccolo\", \"perla\", \"noman\"],\n        emergency: 20\n      }\n  }\n};\n\nexport default initialStore;","const matesReducer = (state = {}, action) => {\n\n  switch (action.type) {\n    case \"SET_TEAM\": {\n      return {\n        ...action.mates\n      }\n    }\n    case \"SET_DAYS\":\n      const newMate1 = { ...state[action.id] };\n      newMate1['d'] = action.days;\n      return {\n        ...state,\n        [action.id]: newMate1\n      };\n    case \"SET_HOURS\":\n      const newMate2 = { ...state[action.id] };\n      newMate2['h'] = action.hours;\n      return {\n        ...state,\n        [action.id]: newMate2,\n      };\n    case \"SET_EFFICIENCY\":\n      const newMate3 = { ...state[action.id] };\n      newMate3['efficiency'] = action.efficiency;\n      return {\n        ...state,\n        [action.id]: newMate3,\n      };\n    case \"ADD_MATE\": {\n      const newMates1 = { ...state };\n      newMates1[action.id] = {\n        name: action.name,\n        d: 0,\n        h: 0,\n        efficiency: 100\n      };\n      return {\n        ...newMates1\n      }\n    }\n    case \"DELETE_MATE\": {\n      const newMates1 = { ...state };\n      delete newMates1[action.id];\n      return {\n        ...newMates1\n      }\n    }\n    default:\n      return state\n  }\n};\n\nexport default matesReducer;","const infoReducer = (state = {}, action) => {\n\n  switch (action.type) {\n    case \"SET_TEAM\": {\n      return {\n        ...action.info\n      }\n    }\n    default:\n      return state\n  }\n};\n\nexport default infoReducer;","import { forEach, remove } from 'lodash';\n\nconst groupsReducer = (state = {}, action) => {\n\n  switch (action.type) {\n    case \"SET_TEAM\": {\n      return {\n        ...action.groups\n      }\n    }\n    case \"SET_EMERGENCY\": {\n      const newGroup = { ...state[action.groupId]};\n      newGroup.emergency = action.emergency;\n      return {\n        ...state,\n        [action.groupId]: newGroup\n      }\n    }\n    case \"ADD_MATE\": {\n      const newGroup = { ...state[action.groupId]};\n      newGroup.mates.push(action.id);\n      return {\n        ...state,\n        [action.groupId]: newGroup\n      }\n    }\n    case \"DELETE_MATE\": {\n      const newState = { ...state };\n      forEach(newState, (group, key) => {\n        remove(group.mates, (k) => k === action.id);\n        if(group.mates.length === 0) {\n          delete newState[key]\n        }\n      });\n      return {\n        ...newState\n      }\n    }\n    default:\n      return state\n  }\n};\n\nexport default groupsReducer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AwIcon from 'awicons-react';\nimport { connect } from 'react-redux';\nimport {\n  deleteMateAction,\n  setDaysAction,\n  setEfficiencyAction,\n  setHoursAction\n} from \"../store/actions\";\n\nimport \"../style/TeamMate.scss\";\n\nfunction TeamMate(\n  {\n    id, edit, emergency,\n    mate,\n    setDays, setHours, setEfficiency, deleteMate\n  }) {\n\n  const onChangeDays = (ev) => {\n    const value = ev.target.value ? parseFloat(ev.target.value) : parseFloat(0);\n    if (0 <= value) {\n      setDays(id, value);\n    }\n  };\n\n  const onChangeHours = (ev) => {\n    const value = ev.target.value ? parseFloat(ev.target.value) : parseFloat(0);\n    if (0 <= value) {\n      setHours(id, value);\n    }\n  };\n\n  const onChangeEfficiency = (ev) => {\n    const value = ev.target.value ? parseFloat(ev.target.value) : parseFloat(0);\n    if (0 <= value && value <= 100) {\n      setEfficiency(id, value)\n    }\n  };\n\n  const onMinusClick = () => deleteMate(id);\n\n  const hours = ((mate.d * 8 + mate.h) * mate.efficiency / 100)* (100 - emergency) / 100;\n\n  return (\n    <div className=\"teammate\">\n      <div className=\"column\">\n        {edit &&\n          <AwIcon\n            iconName=\"times\"\n            className=\"minus\"\n            onClick={onMinusClick}\n          />\n        }\n        {mate.name}<span className=\"hours4every\">({parseInt(hours)} h)</span>\n      </div>\n\n      <div className=\"column\">\n        <input\n          type=\"number\"\n          defaultValue={mate.d}\n          min={0}\n          max={100}\n          onChange={onChangeDays}\n        />\n        <span>d</span>\n        <input\n          type=\"number\"\n          defaultValue={mate.h}\n          min={0}\n          max={100}\n          onChange={onChangeHours}\n        />\n        <span>h</span>\n      </div>\n\n      <div className=\"column\">\n        <input\n          type=\"number\"\n          defaultValue={mate.efficiency}\n          min={0}\n          max={100}\n          onChange={onChangeEfficiency}\n        />\n        <span>%</span>\n      </div>\n    </div>\n  )\n}\n\nTeamMate.propTypes = {\n  id: PropTypes.string,\n  mate: PropTypes.object,\n  edit: PropTypes.bool,\n  emergency: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  mate: state.mates[ownProps.id]\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setDays: (id, days) => dispatch(setDaysAction(id, days)),\n  setHours: (id, hours) => dispatch(setHoursAction(id, hours)),\n  setEfficiency: (id, efficiency) => dispatch(setEfficiencyAction(id, efficiency)),\n  deleteMate: (id) => dispatch(deleteMateAction(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamMate);","// Mate actions\nexport const setDaysAction = (id, days) => ({\n  type: \"SET_DAYS\",\n  id,\n  days\n});\n\nexport const setHoursAction = (id, hours) => ({\n  type: \"SET_HOURS\",\n  id,\n  hours\n});\n\nexport const setEfficiencyAction = (id, efficiency) => ({\n  type: \"SET_EFFICIENCY\",\n  id,\n  efficiency\n});\n\n\n// Group actions\nexport const setEmergencyAction = (groupId, emergency) => ({\n  type: \"SET_EMERGENCY\",\n  groupId,\n  emergency\n});\n\nexport const addMateAction = (id, name, groupId) => ({\n  type: \"ADD_MATE\",\n  id,\n  name,\n  groupId\n});\n\nexport const deleteMateAction = (id) => ({\n  type: \"DELETE_MATE\",\n  id\n});\n\n\nexport const setTeamAction = (info, groups, mates) => ({\n  type: \"SET_TEAM\",\n    info,\n    groups,\n    mates\n});","import {forEach} from \"lodash\";\nimport html2canvas from \"html2canvas\";\n\nexport function calcTotal(allMates, mates, emergency) {\n  let total = 0;\n  forEach(mates, (mate) => {\n    if (allMates[mate]) {\n      const user = allMates[mate];\n      const mateAvailability = (user.h + user.d * 8) * user.efficiency / 100;\n      total = total + mateAvailability\n    }\n  });\n  return total*(100 - emergency) / 100;\n}\n\n\nexport function decodeJSON(fileJSON) {\n  const info = {\n    teamName: fileJSON.teamName || \"DreamTeam\",\n    date: fileJSON.date || Date.now()\n  };\n  const mates = fileJSON.people;\n  let groups = {};\n  if (fileJSON.hasOwnProperty(\"groups\")) {\n    groups = fileJSON.groups\n  }\n  else {\n    const groupMates = [];\n    forEach(mates, (mate, key) => groupMates.push(key));\n    groups = {\n      group1: {\n        name: fileJSON.teamName || \"Team\",\n        mates: groupMates,\n        emergency: 0\n      }\n    }\n  }\n\n  return { info, groups, mates };\n}\n\n/**\n * Generates the relative screenshot of a specific dom element. If isDownloadable is false than the function does not\n * generate the link to download but returns the screenshot, otherwise a link pointing to the image to download is\n * created. The scroll is positioned to zero before capturing the screenshot and then it is restored.\n *\n * @param selector represents the element to capture\n * @param isDownloadable is false if the image should be shown in the modal, true if the image should be downloaded.\n * @return a Promise that returns the screenshot captured or it creates the link to download the image.\n * @author Federico Rispo\n */\nexport function generateScreenshot(selector, isDownloadable) {\n  /*\n   * Get the dimensions of the element to screenshot and add 5 pixel to them because the html2canvas library probably\n   * adds a little margin to the left and this causes a few pixels to be cut to the right.\n   */\n  const widthScreenshot = document.getElementById(selector).clientWidth + 10;\n  const heightScreenshot = document.getElementById(selector).clientHeight + 5;\n\n  const height = window.scrollY;\n  window.scrollTo(0, 0);\n  let promiseCanvas = html2canvas(document.querySelector(\n    `#${selector}`),\n    {width: widthScreenshot, height: heightScreenshot}\n  );\n  window.scrollTo(0, height);\n\n  return promiseCanvas\n  .then(canvas => {\n    const screenshot = canvas.toDataURL();\n\n    if (!isDownloadable) {\n      return screenshot;\n    }\n\n    // Generate the link\n    const link = document.createElement(\"a\");\n    const date = new Date();\n    link.download = `sprintPlanning_${selector}_${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n    link.href = screenshot;\n    link.click();\n  });\n}","import React from 'react';\nimport Modal from \"react-modal\";\nimport AwIcon from \"awicons-react\";\n\nimport \"../style/ScreenshotModal.scss\"\n\n/**\n * Creates a Modal containing the screenshot to show.\n *\n * @param isModalOpen is a boolean indicating if the modal should be shown or not\n * @param closeModal is a function of the action to be done when the user want to close the modal\n * @param screenshot is the blob of the image to show\n * @returns {JSX.Element}\n *\n * @author Federico Rispo\n */\nexport default function ScreenshotModal({isModalOpen, closeModal, screenshot}) {\n  return (\n    <Modal\n      className={'screenshotModal'}\n      overlayClassName={'overlayScreenshotModal'}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onRequestClose={closeModal}\n    >\n      <AwIcon\n        iconName=\"times\"\n        className={\"closeScreenshotModal\"}\n        onClick={closeModal}\n      />\n      <img src={screenshot} alt=\"generated screenshot\"/>\n    </Modal>\n  );\n}","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AwIcon from 'awicons-react';\nimport { connect } from 'react-redux';\nimport { map, find } from 'lodash'\n\nimport \"../style/HoursPlanning.scss\";\n\nimport TeamMate from \"./TeamMate\";\nimport { addMateAction, setEmergencyAction } from \"../store/actions\";\nimport { calcTotal, generateScreenshot } from \"../utilities\";\nimport ScreenshotModal from \"./ScreenshotModal\";\n\nfunction HoursPlanning(\n  {\n    groupId,\n    mates, name, emergency, allMates, date,\n    setEmergency, addMate\n  }) {\n\n  const [table, setTable] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [image, setImage] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const inputRef = useRef(undefined);\n\n  useEffect(() => {\n    const teammateTable = map(mates, (mate) => {\n      if(find(allMates, (m, key) => key === mate)) {\n        return (\n          <TeamMate\n            key={mate}\n            id={mate}\n            edit={editMode}\n            emergency={emergency}\n          />\n        );\n      }});\n    setTable(teammateTable);\n  }, [allMates, mates, emergency, editMode])\n\n  const onChangeEmergency = (ev) => {\n    const value = ev.target.value ? parseFloat(ev.target.value) : parseFloat(0);\n    if (0 <= value && value <= 100) {\n      setEmergency(groupId, value);\n    }\n  };\n\n  const showScreenshot = (selector) => {\n    generateScreenshot(selector, false)\n    .then(screenshot => {\n      setImage(screenshot);\n      setIsModalOpen(true);\n    });\n  };\n\n  const onPlusClick = () => {\n    let id = inputRef.current.value.toLocaleLowerCase();\n    while(find(allMates, (mate, key) => key === id)) {\n      id = id + \"_\"\n    }\n    addMate(id, inputRef.current.value, groupId);\n    inputRef.current.value = \"\";\n  };\n\n  const onKeyDown = (ev) => ev.key === \"Enter\" ? onPlusClick() : void 0;\n\n  const total = calcTotal(allMates, mates, emergency);\n\n  return (\n    <div id={name.toLowerCase().replace(\"-\", \"\")} className=\"hoursPlanning\">\n      <div className=\"title-end\">\n        <h3>{name}</h3>\n        <div style={{ display: 'flex' }}>\n          <AwIcon\n            iconName=\"download\"\n            className=\"icon\"\n            onClick={() => generateScreenshot(name.toLowerCase().replace(\"-\", \"\"), true)}\n          />\n          <AwIcon\n            iconName=\"camera\"\n            className=\"icon\"\n            onClick={() => showScreenshot(name.toLowerCase().replace(\"-\", \"\"))}\n          />\n          <AwIcon\n            iconName=\"pencil-alt\"\n            className=\"icon\"\n            onClick={() => setEditMode((editMode) => !editMode)}\n          />\n        </div>\n      </div>\n      <div className=\"tableHeader\">\n        <span className=\"column name\">Nome</span>\n        <span className=\"column\">Ore lavorative</span>\n        <span className=\"column\">Efficienza</span>\n        <span className=\"column\">Emergenza</span>\n      </div>\n      <div className=\"tableContent\">\n        <div className=\"team\">\n          {table}\n        </div>\n        <div className=\"column emergency\">\n          <span>-</span>\n          <input\n            type=\"number\"\n            defaultValue={emergency}\n            min={0}\n            max={100}\n            onChange={onChangeEmergency}\n          />\n          <span>%</span>\n        </div>\n      </div>\n      {editMode &&\n        <div className=\"add\">\n          <AwIcon\n            iconName=\"plus-circle\"\n            className=\"plus\"\n            onClick={onPlusClick}\n          />\n          <input\n            type={'text'}\n            ref={inputRef}\n            onKeyDown={onKeyDown}\n          />\n        </div>\n        }\n      <div className=\"total\">\n        <p>Totale: {parseInt(total)} h</p>\n      </div>\n      <ScreenshotModal\n        isModalOpen={isModalOpen}\n        closeModal={() => setIsModalOpen(false)}\n        screenshot={image}\n      />\n    </div>\n  )\n}\n\nHoursPlanning.propTypes = {\n  groupId: PropTypes.string,\n  allMates: PropTypes.object,\n  name: PropTypes.string,\n  mates: PropTypes.array,\n  emergency: PropTypes.number\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return({\n    allMates: state.mates,\n    name: state.groups[ownProps.groupId].name,\n    mates: state.groups[ownProps.groupId].mates,\n    emergency: state.groups[ownProps.groupId].emergency,\n    date: state.info.date\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setEmergency: (groupId, emergency) => dispatch(setEmergencyAction(groupId, emergency)),\n  addMate: (id, name, groupId) => dispatch(addMateAction(id, name, groupId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HoursPlanning);","export default __webpack_public_path__ + \"static/media/egg.ef2d65bb.png\";","import React from 'react';\n\nimport \"../style/App.scss\";\n\nimport egg from'../egg.png';\n\nexport function HeadingTitle(props) {\n  const date = new Date(props.date);\n\n  return (\n    <div className=\"heading\">\n      <img src={egg} alt={'egg'} />\n      <div>\n        <h1>{props.teamName}</h1>\n        <h2>Sprint Planning</h2>\n        <h3>{`${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`}</h3>\n      </div>\n      <img src={egg} alt={'egg'} />\n    </div>\n  )\n}\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport AwIcon from 'awicons-react';\nimport { connect } from 'react-redux';\nimport Modal from 'react-modal';\nimport { map, forEach } from 'lodash';\n\nimport '../style/App.scss';\n\nimport HoursPlanning from './HoursPlanning';\nimport { HeadingTitle } from './HeadingTitle';\nimport { calcTotal, decodeJSON, generateScreenshot } from '../utilities';\nimport { setTeamAction } from '../store/actions';\nimport ScreenshotModal from \"./ScreenshotModal\";\n\n// Necessary for the screen reader\nModal.setAppElement('#root');\n\nclass HomePage extends React.Component {\n  static propTypes = {\n    teamName: PropTypes.string,\n    mates: PropTypes.object,\n    groups: PropTypes.object,\n    data: PropTypes.objectOf(Date)\n  };\n\n  fileRef = React.createRef();\n  fileReader = new FileReader();\n\n  state = {\n    fileJSON: null,\n    image: null,\n    isModalOpen: false\n  };\n\n  componentDidMount() {\n    this.fileReader.onload = (event) => {\n      try {\n        let json = JSON.parse(event.target.result);\n        this.setState(() => ({fileJSON: json}));\n      }\n      catch (e) {\n        console.error(e);\n      }\n    };\n    this.fileReader.onerror = (error) => console.error(error);\n  }\n\n  componentWillUpdate(nextProps, nextState, nextContext) {\n    if (this.state.fileJSON !== nextState.fileJSON) {\n      if(nextState.fileJSON.hasOwnProperty(\"people\")) {\n        const { info, groups, mates } = decodeJSON(nextState.fileJSON);\n        this.props.setTeam(info, groups, mates);\n      }\n      else {\n        console.error(\"Invalid json\")\n      }\n    }\n  }\n\n  _importClick = () => this.fileRef.current.click();\n\n  _onChangeFile = (event) => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    let file = event.target.files[0];\n    this.fileReader.readAsText(file);\n  };\n\n  _showScreenshot = () => {\n    generateScreenshot(\"print\", false)\n    .then(screenshot => {\n      this.setState({image: screenshot});\n      this.setState({isModalOpen: true});\n    });\n  };\n\n  render() {\n    const { teamName, groups, mates, date } = this.props;\n\n    const groupsRendered = map(groups, (group, key) => <HoursPlanning groupId={key} key={key} />);\n\n    let total = 0;\n    forEach(groups, (group) => {\n      total = total  + calcTotal(mates, group.mates, group.emergency);\n    });\n\n    return (\n      <div className=\"page\" id=\"print\">\n        <HeadingTitle teamName={teamName} date={date}/>\n        <div className=\"actionIcons\">\n          <div className=\"action\" onClick={this._importClick}>\n            <AwIcon\n              iconName=\"upload\"\n              className=\"actionIcon\"\n            />\n            <span>Upload JSON</span>\n            <input\n              type=\"file\"\n              accept=\".json\"\n              ref={this.fileRef}\n              style={{display: \"none\"}}\n              onChange={this._onChangeFile}\n            />\n          </div>\n          <div className=\"action\" onClick={this._showScreenshot}>\n            <AwIcon\n              iconName=\"camera\"\n              className=\"actionIcon\"\n            />\n            <span>Show PNG</span>\n          </div>\n          <div className=\"action\" onClick={() => generateScreenshot(\"print\", true)}>\n            <AwIcon\n              iconName=\"download\"\n              className=\"actionIcon\"\n            />\n            <span>Download as PNG</span>\n          </div>\n        </div>\n\n        <div className=\"sprintPlanning\">\n          <Fragment>\n            {groupsRendered}\n          </Fragment>\n          <div className=\"recap\">\n            Totale: {parseInt(total)} h\n          </div>\n        </div>\n        <ScreenshotModal\n          isModalOpen={this.state.isModalOpen}\n          closeModal={() => this.setState({isModalOpen: false})}\n          screenshot={this.state.image}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return({\n    teamName: state.info.teamName,\n    mates: state.mates,\n    groups: state.groups,\n    date: state.info.date\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setTeam: (info, groups, mates) => dispatch(setTeamAction(info, groups, mates))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createPlanningStore } from \"./store/createStore\";\nimport HomePage from \"./components/HomePage\";\n\nfunction App() {\n  const store = createPlanningStore();\n  return (\n    <Provider store={store}>\n      <HomePage />\n    </Provider>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from 'redux'\n\nimport initialStore from \"./initialStore\";\nimport matesReducer from \"./reducers/matesReducer\";\nimport infoReducer from \"./reducers/infoReducer\";\nimport groupsReducer from \"./reducers/groupsReducer\";\n\nexport function createPlanningStore() {\n\n  const reducers = combineReducers({\n    info: infoReducer,\n    mates: matesReducer,\n    groups: groupsReducer\n  });\n\n  return createStore(\n    reducers,\n    initialStore\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}